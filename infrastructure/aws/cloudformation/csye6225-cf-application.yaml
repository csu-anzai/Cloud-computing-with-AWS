AWSTemplateFormatVersion: 2010-09-09

Parameters:

  AMI:

    Type: 'AWS::EC2::Image::Id'

    Description: AMI image id



  Subnet1:



    Type: 'AWS::EC2::Subnet::Id'



    Description: List of zones in subnet



 

  Subnet2:



    Type: 'AWS::EC2::Subnet::Id'



    Description: List of zones in subnet

  

  VPC:
    Type: 'AWS::EC2::VPC::Id'
    Description: 'vpcid'

  AWSKEY:
    
    Type: 'AWS::EC2::KeyPair::KeyName'

    Description: 'EC2 instance key'



Resources:

 

  
  WebAppSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: "webapp sec group"
      GroupName: "csyesu2019-webappsecgroup"
      

      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22' 
        CidrIp: 0.0.0.0/0

      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80' 
        CidrIp: 0.0.0.0/0

      - IpProtocol: tcp
        FromPort: '5000'
        ToPort: '5000' 
        CidrIp: 0.0.0.0/0


     
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443' 
        CidrIp: 0.0.0.0/0
      


    
  RDSSecurityGroup:
  
    Type: AWS::RDS::DBSecurityGroup
    Properties: 

      EC2VpcId: !Ref VPC
      GroupDescription: "RDSsecgroup"
      
      DBSecurityGroupIngress: 
      - EC2SecurityGroupId: !GetAtt "WebAppSecurityGroup.GroupId"

      

  # RDSingress:   

  #   Type: AWS::RDS::DBSecurityGroupIngress
  #   Properties: 
  
  #     #DBSecurityGroupId: !GetAtt "RDSSecurityGroup.GroupId"

  #     EC2SecurityGroupId: !GetAtt "WebAppSecurityGroup.GroupId"
  

  InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles : ["STACK-NAME-summercloud201-CodeDeployEC2ServiceRole-S0D2BSZF9ZER"]


         
         

  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: RDSInstance
    Properties: 

     
      DisableApiTermination: No
      ImageId: !Ref AMI
      IamInstanceProfile : !Ref InstanceProfile


      SecurityGroupIds: 
        - !GetAtt "WebAppSecurityGroup.GroupId"
      SubnetId: !Ref Subnet1

      KeyName: !Ref AWSKEY


      InstanceType: "t2.micro"
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          VolumeSize: 20
      Tags: 
      - 
        Key: "Name"
        Value: "EC2codedeploy"
      UserData: 
        Fn::Base64: !Sub |
            #!/bin/bash -xe

            echo "export RDS_INSTANCE=${RDSInstance.Endpoint.Address}" >> /etc/environment
            
            echo "export MYSQL_DATABASE_USER=csye6225master" >> /etc/environment
            echo "export MYSQL_DATABASE_PASSWORD=csye6225password" >> /etc/environment
            echo "export AWS_REGION_NAME=us-east-1" >> /etc/environment
            echo "export PRODUCTION_RUN=True" >> /etc/environment


          #echo "export S3_BUCKET_NAME=${s3.BucketName}" >> /etc/environment




            



          #echo "export DB_CONNECTION=${RDSInstance.Endpoint.Address}" >> $HOME/.bashrc


           # export S3_BUCKET_NAME=csye6225-su19-thawalia.me.csye6225.com
           # export AWS_REGION=us-east-1

        
        


      


     


  DyanamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:

      AttributeDefinitions:
      - AttributeName: "id"
        AttributeType: S
      KeySchema: 
      - AttributeName: "id"
        KeyType: "HASH"

      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
    
      
      TableName: "csye6225"
      
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 100

      DBInstanceClass: db.m5.large
      DBName: "csye6225"
      Engine: MySQL 
      MasterUserPassword: "csye6225password"
      MasterUsername: "csye6225master"
      DBSecurityGroups: 
      - !Ref RDSSecurityGroup
    
      MultiAZ: No
      Port: 3306
      DBSubnetGroupName: !Ref DBSubnetGroup
      StorageType: gp2
      
      PubliclyAccessible: yes
      DBInstanceIdentifier: "csye6225-su19"



  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup

    Properties:

      DBSubnetGroupDescription: "TMK"
      
      DBSubnetGroupName: "DBSubnetgroup"
      
      SubnetIds: 
      - !Ref Subnet1
      - !Ref Subnet2





            



  
        





  
        
    






  









